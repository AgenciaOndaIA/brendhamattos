{
  "createdAt": "2025-05-23T21:15:33.253Z",
  "updatedAt": "2025-05-23T21:27:23.357Z",
  "id": "atPFEV2zxQJAPzIH",
  "name": "[Anna] Calendar | Agent",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('[Main Agent] Request').item.json.body.solicitacao }} Solicitação para o calendário de id {{ $('Calendar Query').item.json.data.id }}",
        "options": {
          "systemMessage": "={{ \n   $('[Calendars] Get Calendar').first().json.data.prompt\n\n    .replaceAll('${now}', $now)\n\n    .replaceAll('${userName}', $('[Conversations] Find Calendar').item.json.data[0].user_id.username)\n\n    .replaceAll('${role}', ($('[Directus Users] Get Admins').item.json.errors ? \"Sem email no campo email do contato\" : $('[Directus Users] Get Admins').item?.json?.data[0]?.role?.name))\n\n    .replaceAll('${conversationHistory}', $('[Core Chat] Histories').item.json.data.map(c => {\n      const tipo = c.message.type;\n      const conteudo = c.message.content;\n      const remetente = tipo === 'human'\n        ? 'Contact'\n        : 'IA';\n    return `${remetente}: ${conteudo}`;   }).join('\\n') )\n}} \n{{ $('[Tool] Dates').item.json.configuracao_data }}\n\nSempre chame a tool 'Get Google Access Token' antes de qualquer operacão com calendario passando o id do calendario.\n\n  <functions>\n    <function name=\"Get Access Token\" required>Obtém tokens necessários para acessar calendários.</function>\n    <function name=\"List Events\">Lista eventos existentes para verificar conflitos.</function>\n    <function name=\"Calendar List\">Recupera calendários disponíveis ao usuário.</function>\n    <function name=\"Create Events\">Cria eventos sem conflito após confirmação.</function>\n    <function name=\"Delete Events\">Remove eventos específicos.</function>\n    <function name=\"Update Event\">Atualiza eventos existentes.</function>\n  </functions>\n\n<calendarId>calendarId: {{ $('Calendar Query').item.json.data.id }}</calendarId>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2420,
        0
      ],
      "id": "534212e8-11fc-47b2-a094-cf4e18f5d6a2",
      "name": "AI Agent",
      "retryOnFail": false,
      "executeOnce": true
    },
    {
      "parameters": {
        "sseEndpoint": "={{ $env.WEBHOOK_URL }}mcp/calendar/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        2640,
        260
      ],
      "id": "94f46c67-e98f-4803-b6f1-bb75774c13dd",
      "name": "Calendar"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "last",
              "value": "={{ $json.headers['last-workflow'] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "18c389e7-b656-456b-81f5-130299ee739c",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.WEBHOOK_URL.replace(/\\/$/, '') }}/webhook/calendar/oauth/token/refresh",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"directus\": {\n    \"domain\": \"{{ $('[Main Agent] Request').item.json.body.directus_service }}\",\n    \"token\": \"{{ $('[Main Agent] Request').item.json.body.directus_token }}\"\n  },\n  \"resource\": {{ JSON.stringify($json.data, 0, 2) }}\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        -120
      ],
      "id": "7b7eeea4-e5bc-471e-9b50-088dad837856",
      "name": "[Auth Handler] Expiration Token Test"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        400,
        0
      ],
      "id": "a09590b0-4766-4067-abd3-02137faac95c",
      "name": "Split Out"
    },
    {
      "parameters": {
        "url": "={{ $('[Main Agent] Request').item.json.headers['api-address'] }}/items/calendars/{{ $json.user_id.ai_agent.calendar.id }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fields",
              "value": "id, client_id, client_secret, access_token, refresh_token, token_expiration, prompt"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('[Main Agent] Request').item.json.headers['api-token'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        0
      ],
      "id": "180250fc-e675-45a9-a5f6-bac6e33dccdb",
      "name": "[Calendars] Get Calendar",
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "={{ $json.headers['api-address'] }}/items/conversations",
        "sendQuery": true,
        "specifyQuery": "json",
        "jsonQuery": "={\n    \"filter\": {\n        \"user_id\": {\n            \"_eq\": \"{{ $json.body.contact }}\"\n        }\n    },\n    \"fields\": [\n        \"id\",\n        \"user_id.ai_agent.calendar.id\",\n        \"user_id.id\",\n        \"user_id.username\",\n        \"user_id.email\"\n    ]\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.headers['api-token'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        0
      ],
      "id": "065df4d4-eee8-40cf-bfd2-e7946ef0f4b6",
      "name": "[Conversations] Find Calendar"
    },
    {
      "parameters": {
        "url": "={{ $('[Main Agent] Request').item.json.headers['api-address'] }}/items/core_chat_histories",
        "sendQuery": true,
        "specifyQuery": "json",
        "jsonQuery": "={\n    \"filter\": {\n        \"session_id\": {\n            \"_eq\": \"{{ $('[Conversations] Find Calendar').first().json.data[0].id }}\"\n        }\n    },\n    \"fields\": [\n        \"message\",\n        \"date_created\"\n    ],\n    \"sort\": \"-date_created\",\n    \"limit\": \"15\"\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('[Main Agent] Request').item.json.headers['api-token'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2020,
        0
      ],
      "id": "d22c9b1f-c755-46f5-89c0-3cb2556b373e",
      "name": "[Core Chat] Histories"
    },
    {
      "parameters": {
        "url": "={{ $('[Main Agent] Request').item.json.headers['api-address'] }}/items/calendars/yXg3jf7aDiw3qQnM",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fields",
              "value": "id, client_id, client_secret, access_token, refresh_token, token_expiration, prompt"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('[Main Agent] Request').item.json.headers['api-token'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        -120
      ],
      "id": "520da153-e988-4d7d-addd-b839e018fd0f",
      "name": "[Calendars] Get Calendar1",
      "executeOnce": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('[Conversations] Find Calendar').item.json.data[0].user_id.id.toString() }}",
        "sessionTTL": 86400,
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2820,
        260
      ],
      "id": "65f04b88-924a-4361-a4f5-c457f991bc61",
      "name": "Redis Chat Memory",
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('[Conversations] Find Calendar').item.json.data[0].user_id.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2500,
        260
      ],
      "id": "62148697-0308-4f1f-8f54-5409b0b0e183",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1600,
        0
      ],
      "id": "c3f38efe-1909-4483-b06f-cb1365cf8177",
      "name": "Calendar Query"
    },
    {
      "parameters": {
        "url": "={{ $('[Main Agent] Request').item.json.headers['api-address'] }}/users",
        "sendQuery": true,
        "specifyQuery": "json",
        "jsonQuery": "={\n  \"filter\": {\n    \"email\": {\n      \"_eq\": \"{{ $('[Conversations] Find Calendar').item.json.data[0].user_id.email }}\"\n    }\n  },\n  \"fields\": [\n    \"id\",\n    \"first_name\",\n    \"last_name\",\n    \"email\",\n    \"role.name\",\n    \"status\"\n  ]\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('[Main Agent] Request').item.json.headers['api-token'] }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1820,
        0
      ],
      "id": "43d8f575-1303-429f-ad2d-8b65f18a58bc",
      "name": "[Directus Users] Get Admins",
      "executeOnce": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/calendar/agent",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -200,
        0
      ],
      "id": "09a12639-c738-46c2-a011-8cce66b6c5b4",
      "name": "[Main Agent] Request",
      "webhookId": "66e95eb6-5783-4025-82af-b189ac106775"
    },
    {
      "parameters": {
        "url": "={{ $env.WEBHOOK_URL }}webhook/tools/dates",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2220,
        0
      ],
      "id": "b6b9ba10-46a0-4929-b12a-e8337ff66678",
      "name": "[Tool] Dates"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6ff5758c-983e-49cf-9903-331781d6d185",
              "leftValue": "={{ $json.helper.minutes }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1000,
        0
      ],
      "id": "4bfce65d-2e7d-408a-8b5f-33e4bc3ca8b9",
      "name": "Token Vencido"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "221c1aca-23b5-46e0-a4b4-c4b3c18e35d5",
              "name": "helper.expiration",
              "value": "=Esse token expira em {{ Math.floor((new Date($json.data.token_expiration).getTime() - Date.now()) / 60000) }} minutos",
              "type": "string"
            },
            {
              "id": "44ff01ce-a03c-4bdc-b43a-9bf624a2f3f5",
              "name": "helper.minutes",
              "value": "={{ Math.floor((new Date($json.data.token_expiration).getTime() - Date.now()) / 60000) }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        800,
        0
      ],
      "id": "dcc7c13b-1e24-4514-85f4-ebe9d0a4d9cc",
      "name": "Token Helper"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2320,
        260
      ],
      "id": "2c529346-96e4-45b4-858b-3c59130e9379",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "kM2vxyaM9jSLq2tk",
          "name": "OpenAi Sy"
        }
      }
    }
  ],
  "connections": {
    "Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "[Conversations] Find Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Auth Handler] Expiration Token Test": {
      "main": [
        [
          {
            "node": "[Calendars] Get Calendar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "[Calendars] Get Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Calendars] Get Calendar": {
      "main": [
        [
          {
            "node": "Token Helper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Conversations] Find Calendar": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Core Chat] Histories": {
      "main": [
        [
          {
            "node": "[Tool] Dates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Calendars] Get Calendar1": {
      "main": [
        [
          {
            "node": "Calendar Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Query": {
      "main": [
        [
          {
            "node": "[Directus Users] Get Admins",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Directus Users] Get Admins": {
      "main": [
        [
          {
            "node": "[Core Chat] Histories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Main Agent] Request": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Tool] Dates": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token Vencido": {
      "main": [
        [
          {
            "node": "[Auth Handler] Expiration Token Test",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Calendar Query",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Token Helper": {
      "main": [
        [
          {
            "node": "Token Vencido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "meta": null,
  "pinData": null,
  "versionId": "f97392ef-f5bf-4a0c-90d7-2b6550c980b4",
  "triggerCount": 0,
  "tags": []
}